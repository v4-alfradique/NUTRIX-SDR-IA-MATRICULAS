{
  "name": "NUTRIX-SDR-IA-MATRICULAS",
  "nodes": [
    {
      "parameters": {
        "content": "# Agentes IA",
        "height": 80,
        "width": 1108,
        "color": 4
      },
      "id": "a1730ed2-d7b0-4fd8-ae23-03bdcec30e5f",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2464,
        -96
      ]
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "id": "8ffe3bf6-e7e4-4762-a600-144101e05013",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3744,
        304
      ],
      "credentials": {
        "openAiApi": {
          "id": "qNDm6pku8uL6dS11",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e2b4f43a-8a73-4566-a23b-6b54cc82efbc",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4304,
        112
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "4a76f824-6724-48ec-aa59-5a1c75d1453a",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3904,
        304
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated:{{ $json.Resposta }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "={\n  \"messages\": [\n    \"Por favor, gere a saída no seguinte formato JSON: {\\\"messages\\\": [\\\"splitedMessage\\\", \\\"splitedMessage\\\", \\\"splitedMessage\\\"]}\",\n    \"As mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano. Certifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\",\n    \"Jamais separe uma mensagem vazia. Cada mensagem deve ter entre 100 e 200 caracteres, sem cortar informações, pois é uma conversa de chat.\",\n    \"Certifique-se de que a resposta siga exatamente essa estrutura: *negrito* (substitua '**' por '*') não mande nada em negrito remova todos '*'; ~tachado~ (caso seja algo excluído/alterado); _itálico_ (extremamente raro).\",\n    \"Tudo o que for link, pode colocar entre \\\"`\\\", ou seja, na seguinte formatação: `www.link.com.br`. Use sempre essa formatação para todos os links.\",\n    \"Não adicione mais nenhuma letra, palavra ou frase à mensagem que você recebeu.\"\n  ]\n}"
            }
          ]
        }
      },
      "id": "2dafab9f-ff5a-4999-b964-2b1f04119e4f",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        3728,
        112
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Resposta }}",
                    "rightValue": "221701",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "2aa763f7-cf04-44e7-9bbb-8f8de823aef8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continuar na IA"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.Resposta }}",
                    "rightValue": "221701",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Pausar a IA"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        3392,
        128
      ],
      "id": "909e637a-8eeb-4a91-8011-6df02ab7101b",
      "name": "Switch2"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "911fee59-491d-4d44-9766-8e0005b1074b",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4064,
        112
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Dados').item.json.Telefone }}"
      },
      "id": "b2b0d952-198c-4723-b4cc-45972c086cee",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3152,
        128
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2320,
        256
      ],
      "id": "e8b697ac-9d2c-4053-b096-78e0fc9a7781",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2112,
        272
      ],
      "id": "923b4e7f-cec2-4cb5-a8ec-83f61a3273f1",
      "name": "If1"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "teste1",
        "options": {}
      },
      "id": "691f7f88-c3a1-4dee-8618-e75ee7f8419c",
      "name": "Webhook EVO",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3104,
        176
      ],
      "webhookId": "b9210353-20ee-40ed-911b-d847cfc42386"
    },
    {
      "parameters": {
        "content": "# WEBHOOK & ROTAS",
        "height": 80,
        "width": 1124,
        "color": 4
      },
      "id": "a537450d-da3c-4859-8494-f079e246f6ba",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3104,
        80
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "59492573-8324-4972-9293-c7af9cf9fbba",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        48,
        352
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "27af2cdc-ca87-4026-abcb-26861741e9ce",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -96,
        352
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d35973b2-15da-43bb-b43f-e91c17f3d68c",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        384,
        352
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $('Dados').item.json.message.content }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "f46b296a-1363-4e8a-a86a-8e1d6ad38ecb",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        544,
        368
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "97da13e4-4534-437c-b91f-72318ab30e7f",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        544,
        192
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "={{ $('Webhook EVO').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "46dcfc67-8e39-47fa-9189-7db2b67cae99",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -192,
        112
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Analise a imagem e me traga um resumo simples e o mais curto possível do que ela é",
        "inputType": "base64",
        "options": {}
      },
      "id": "d8f05afe-82bb-40dc-8534-a9c200aada52",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        208,
        352
      ],
      "credentials": {
        "openAiApi": {
          "id": "qNDm6pku8uL6dS11",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d849a677-314b-4e13-9024-e32513e8c39f",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1584,
        160
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $('Dados').item.json.message.content }}",
        "tail": true
      },
      "id": "0a826b37-576c-4ff5-b4de-93edb9a651fd",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        544,
        -128
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Dados').item.json.Telefone }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "2ecf8c80-6132-4f4a-9b34-45ea283dba41",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        544,
        32
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "77f9378c-989c-425c-9e0c-6d7619f9d6b0",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1440,
        160
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Dados').item.json.Telefone }}",
        "options": {}
      },
      "id": "f100ea10-8ad9-4f01-936a-ce807827f8f9",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        896,
        160
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Dados').item.json.Telefone }}",
        "options": {}
      },
      "id": "229f4ebf-6992-4cf0-a340-71a265d4728f",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1280,
        160
      ],
      "credentials": {
        "redis": {
          "id": "SrDRs7V2Dv5H2eEq",
          "name": "redis"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $item(\"0\").$node[\"Dados\"].json[\"message\"][\"event\"] }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "7c878f9b-2c93-4061-954a-a832153e7647"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $item(\"0\").$node[\"Dados\"].json[\"message\"][\"event\"] }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "d5f28da3-3266-4fa4-b39f-04dcfc0d4f2d",
      "name": "Switch6",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1456,
        336
      ]
    },
    {
      "parameters": {
        "jsCode": "const redis1 = JSON.parse($json.Redis1);\nconst redis2 = JSON.parse($json.Redis2);\n\nconst combinadoSemDuplicatas = Array.from(new Set([...redis1, ...redis2]));\n\nconst mensagem = combinadoSemDuplicatas.join(\" \");\n\nreturn [{ json: { mensagem_completa: mensagem } }];"
      },
      "id": "8402cb0e-1a7e-4ffc-9150-c38ad38b9118",
      "name": "Mensagem Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1824,
        144
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "8e97bf6b-7fdc-463e-add8-2a3ae1d427fe",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        176,
        160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a305d9e6-9dbe-4cc3-b8f9-fb0873f6e57f",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        16,
        160
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "17efd4bf-7cd7-4584-9a94-649ad25667f1",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        368,
        160
      ],
      "credentials": {
        "openAiApi": {
          "id": "qNDm6pku8uL6dS11",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5922557b-71e7-4390-af21-10b683e7a875",
                    "leftValue": "={{ $('Dados').item.json.Telefone }}",
                    "rightValue": "5521967676014|5562933003228|5521975102391|5521996780989|5521964189344|5521972097515|5521986238754|5521972417756",
                    "operator": {
                      "type": "string",
                      "operation": "regex"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Numero pessoal"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9865cb5b-33da-490c-afc3-186457d5b564",
                    "operator": {
                      "type": "string",
                      "operation": "notStartsWith"
                    },
                    "leftValue": "={{ $json.Telefone }}",
                    "rightValue": "5562933003228@s.whatsapp.net"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Rota normal"
            }
          ]
        },
        "options": {}
      },
      "id": "08558a42-921b-4278-b569-51430a2db658",
      "name": "Rotas",
      "type": "n8n-nodes-base.switch",
      "position": [
        -2704,
        272
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_ia",
              "fieldValue": "pause"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -928,
        48
      ],
      "id": "016030a4-ccad-4fce-876f-11428c43bd9c",
      "name": "Pausar IA",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1056,
        368
      ],
      "id": "ec4aa366-2656-4b17-889a-ff43db46e699",
      "name": "Verificar Pause",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.atendimento_ia }}",
                    "rightValue": "pause",
                    "operator": {
                      "type": "string",
                      "operation": "notStartsWith"
                    },
                    "id": "ff00573b-e517-43c6-8644-14a4fe8565d1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.atendimento_ia }}",
                    "rightValue": "pause",
                    "operator": {
                      "type": "string",
                      "operation": "startsWith"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia pausada"
            }
          ]
        },
        "options": {}
      },
      "id": "78eeadbe-3716-4544-afc7-05a6d8f0df30",
      "name": "Rota Atendimento",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -832,
        368
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_ia",
              "fieldValue": "reativada"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -720,
        208
      ],
      "id": "37ac9603-ec53-45fb-a181-0501d0a630b7",
      "name": "Reativar IA",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('Webhook EVO').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('Webhook EVO').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('Webhook EVO').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.audioMessage?.url || '' }}{{ $('Webhook EVO').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('Webhook EVO').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            },
            {
              "id": "886e3751-e39b-4fc6-98d1-3113eaeebbb4",
              "name": "=body.event",
              "value": "={{ $('Webhook EVO').item.json.body.event }}",
              "type": "string"
            },
            {
              "id": "d04a0c6e-7842-41d2-bdb0-c0ce51d6dad7",
              "name": "Telefone",
              "value": "={{ $json.Telefone }}",
              "type": "string"
            },
            {
              "id": "a57db642-3e13-452e-bb5b-19f7e9f3bd5d",
              "name": "NomeWpp",
              "value": "={{ $('Webhook EVO').item.json.body.data.pushName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2515e6e7-9e00-4942-b1b8-1a1e6af358db",
      "name": "Dados",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3104,
        608
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('Dados').item.json.Telefone }}",
            "message": "={\"type\": \"human\", \"content\": \"{{ $('Rotas').item.json.message.content.replace(/\\n/g, ' ') }}\", \"additional_kwargs\": {}, \"response_metadata\": {}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -496,
        384
      ],
      "id": "ee69bc64-38f3-4dca-84dd-db54223d710a",
      "name": "Salvar Historicoo Humano1",
      "credentials": {
        "postgres": {
          "id": "pDvYHE9DpN1GrLiK",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $('Dados').item.json.Telefone }}",
            "message": "={\"type\": \"ai\", \"content\": \"{{ $('Rotas').item.json.message.content.replace(/\\n/g, ' ') }}\", \"additional_kwargs\": {}, \"response_metadata\": {}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -560,
        48
      ],
      "id": "3f9bf561-7bf0-434a-ae8e-888efd422b40",
      "name": "Salvar Historicoo Humano",
      "credentials": {
        "postgres": {
          "id": "pDvYHE9DpN1GrLiK",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "9865cb5b-33da-490c-afc3-186457d5b564",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "leftValue": "={{ $('Rotas').item.json.message.content }}",
                    "rightValue": "Atendimento finalizado"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA Pausada"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "5a9a1fee-b408-469f-a08c-e8d690fc9792",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $('Rotas').item.json.message.content }}",
                    "rightValue": "Atendimento finalizado"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Reativar IA"
            }
          ]
        },
        "options": {}
      },
      "id": "848305df-8884-49e1-90b3-3bbe2565ec1e",
      "name": "Palavra para despausar",
      "type": "n8n-nodes-base.switch",
      "position": [
        -1264,
        160
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "amount": 15
      },
      "id": "d504b04b-ccfd-4027-8f3b-81743748b8ae",
      "name": "Espera para responder",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1088,
        160
      ],
      "webhookId": "5647dd57-cf90-4dff-aaaf-cdc2eec6f09f"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2016,
        144
      ],
      "id": "510aa3f2-af4b-44f8-9408-279b265192ed",
      "name": "Get a row",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "80cb89c8-8af7-4c3e-9874-6e05c3c86ca6",
                    "leftValue": "={{ $json.setor }}",
                    "rightValue": "SUPORTE",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Suporte"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8cfcce0c-4138-407e-b24d-9cade1784c4f",
                    "leftValue": "={{ $json.setor }}",
                    "rightValue": "VENDAS",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Vendas"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.setor }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    },
                    "id": "17f4afa1-3a5b-4cfd-b528-00433e87accf"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Sem setor"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2192,
        112
      ],
      "id": "4f6da0bb-6a48-4b4b-b9b9-4e5f3f804ece",
      "name": "Switch"
    },
    {
      "parameters": {
        "content": "TEXTO PARA REATIVAR",
        "height": 208,
        "width": 198,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1312,
        112
      ],
      "typeVersion": 1,
      "id": "281f6ae4-95b8-40fa-be37-28b167dfe205",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "TEMPO DE ESPERRA",
        "height": 192,
        "width": 198,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1040,
        128
      ],
      "typeVersion": 1,
      "id": "95abd379-6b63-4ede-99a9-5197f90b0d75",
      "name": "Sticky Note25"
    },
    {
      "parameters": {
        "content": "ROTA PARA TESTE",
        "height": 208,
        "width": 198,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2752,
        208
      ],
      "typeVersion": 1,
      "id": "54b1b8d9-4c99-4d01-95f3-c3c3f4155c0d",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "functionCode": "return items.map(item => {\n  // Pega o contato bruto, remove o que vem depois do \"@\" e limpa, deixando apenas números.\n  const raw = item.json.contato || '';\n  const telefone = raw.split('@')[0].replace(/\\D/g, '');\n\n  let phoneKommoFormat = ''; // Variável para o formato Kommo, inicia vazia.\n\n  // Só executa a formatação se existir um número de telefone após a limpeza.\n  if (telefone) {\n    // 1. Remove o código de país '55' se ele já existir, para padronizar o tratamento.\n    let numeroLocal = telefone.startsWith('55') ? telefone.substring(2) : telefone;\n\n    // 2. Separa o DDD do restante do número.\n    if (numeroLocal.length >= 10) { // Garante que temos no mínimo um DDD + 8 dígitos\n      const ddd = numeroLocal.substring(0, 2);\n      let parteNumero = numeroLocal.substring(2);\n\n      // 3. Adiciona o dígito '9' no início se o número tiver apenas 8 dígitos.\n      if (parteNumero.length === 8) {\n        parteNumero = '9' + parteNumero;\n      }\n\n      // 4. Formata o número com o hífen (9XXXX-YYYY) e junta tudo no padrão final.\n      if (parteNumero.length === 9) {\n        const numeroFormatado = `${parteNumero.substring(0, 5)}-${parteNumero.substring(5)}`;\n        \n        // **MUDANÇA APLICADA AQUI:** Adiciona espaços entre 55, DDD e o resto do número.\n        phoneKommoFormat = `55 ${ddd} ${numeroFormatado}`; // Ex: 55 62 98765-4321\n      }\n    }\n  }\n\n  // Retorna o JSON original, adicionando as duas variáveis de telefone.\n  return {\n    json: {\n      ...item.json,\n      Telefone: telefone,\n      phoneKommoFormat: phoneKommoFormat\n    }\n  };\n});"
      },
      "id": "ee98907b-0ac4-42f2-ab1f-6ef6d2ce862c",
      "name": "Extrair Número",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -3104,
        464
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "contato",
              "value": "={{ $json[\"body\"][\"data\"][\"key\"][\"remoteJid\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a3faf94c-a19c-48a6-92c4-42718ef086ee",
      "name": "Entrada de Contato",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -3104,
        320
      ]
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nomewpp",
              "fieldValue": "={{ $('Dados').item.json.NomeWpp }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Dados').item.json.Telefone }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now}}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1872,
        352
      ],
      "id": "35e21dc0-a4c0-47ad-8aac-f8d8b96e6c74",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -960,
        208
      ],
      "id": "976f8849-0831-4d57-9011-bc0b7d1e3aa4",
      "name": "Espera para reativar a IA",
      "webhookId": "71b110f6-2f38-4732-abf8-8c5a5f92722f"
    },
    {
      "parameters": {
        "content": "TEMPO ENTRE MENSAGENS",
        "height": 192,
        "width": 198,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4752,
        80
      ],
      "typeVersion": 1,
      "id": "ff3e2ae1-e952-4d7f-9009-9a2f3ccffbd5",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "content": "Agente TRIX IA",
        "height": 496,
        "width": 646,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2480,
        32
      ],
      "typeVersion": 1,
      "id": "2119f49e-3436-4b25-8086-ebcc6022cf6f",
      "name": "Sticky Note30"
    },
    {
      "parameters": {
        "content": "PROTOCOLO PARA PARAR A IA",
        "height": 224,
        "width": 230,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3344,
        80
      ],
      "typeVersion": 1,
      "id": "a8440c70-9b7a-4654-95a1-fae8e35c10cb",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Dados').item.json.Telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "atendimento_ia",
              "fieldValue": "pause"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3568,
        400
      ],
      "id": "2aa65cd8-a685-4a72-b4db-1a7f493f6831",
      "name": "Update a row",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "nutrix_cursos",
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        2848,
        352
      ],
      "id": "dc1496fd-95e9-4cd1-baab-65e302d37ee3",
      "name": "<cursos>",
      "credentials": {
        "supabaseApi": {
          "id": "iajvDB39xEYpikEc",
          "name": "NUTRIX"
        }
      }
    },
    {
      "parameters": {
        "content": "## Evo + Bot Kommo\nO fluxo vai receber mensagem direta e comandos do bot da Kommo"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3104,
        -112
      ],
      "typeVersion": 1,
      "id": "873aac9f-06e9-47eb-993e-b6bad393523f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "// Function Item Node\n// Transforma string JSON em objeto e depois coleta todos os valores em um array\n\n// pega a string que vem no campo data\nconst str = $json.data || \"\";\n\n// transforma a string JSON em objeto real\nlet obj;\ntry {\n  obj = JSON.parse(str);\n} catch (error) {\n  return {\n    json: {\n      error: \"Erro ao fazer JSON.parse\",\n      mensagem: error.message\n    }\n  };\n}\n\n// função recursiva para coletar todos os valores do objeto\nfunction collectValues(input, collector = []) {\n  if (Array.isArray(input)) {\n    for (const val of input) {\n      collectValues(val, collector);\n    }\n  } else if (input !== null && typeof input === \"object\") {\n    for (const key of Object.keys(input)) {\n      collectValues(input[key], collector);\n    }\n  } else {\n    collector.push(input);\n  }\n  return collector;\n}\n\nconst valuesArray = collectValues(obj);\n\nreturn {\n  json: {\n    original: obj,\n    valores: valuesArray\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1856,
        576
      ],
      "id": "bd37c4f3-030c-4dfd-a7cc-40c43e60b4d4",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "=https://kellferr123.kommo.com/api/v4/leads?query={{ $('Extrair Número').item.json.phoneKommoFormat }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImUyMTYzZjdjNzA4N2VmMzVkYTU0MGMyNjBlMzkxZmI4MmQ1YTM4YjkzNWExYTdlYjFhNTg4ZmJkYmQ5YmI5N2YzYTRkM2FkN2I5YmE3OTdjIn0.eyJhdWQiOiI3NWVlMzkwYS0xN2JkLTQ1MWMtYjg3OC0xMWUzYjlhZTNhZTYiLCJqdGkiOiJlMjE2M2Y3YzcwODdlZjM1ZGE1NDBjMjYwZTM5MWZiODJkNWEzOGI5MzVhMWE3ZWIxYTU4OGZiZGJkOWJiOTdmM2E0ZDNhZDdiOWJhNzk3YyIsImlhdCI6MTc2MDAzMjc2MywibmJmIjoxNzYwMDMyNzYzLCJleHAiOjE3NzIyMzY4MDAsInN1YiI6IjExMzUyMzY3IiwiZ3JhbnRfdHlwZSI6IiIsImFjY291bnRfaWQiOjM0ODExOTgzLCJiYXNlX2RvbWFpbiI6ImtvbW1vLmNvbSIsInZlcnNpb24iOjIsInNjb3BlcyI6WyJjcm0iLCJmaWxlcyIsImZpbGVzX2RlbGV0ZSIsIm5vdGlmaWNhdGlvbnMiLCJwdXNoX25vdGlmaWNhdGlvbnMiXSwidXNlcl9mbGFncyI6MCwiaGFzaF91dWlkIjoiYmIyYWJjMzYtY2E3ZS00NGUyLThlMjEtYTNhMGU2MzY1ZGM3IiwiYXBpX2RvbWFpbiI6ImFwaS1jLmtvbW1vLmNvbSJ9.XEAlLXOfJYe6S-6AM66hFILESepbHW5UCnZ6MJCHy8sIzkjlKMR0ln9eXxLEae188-NT9oSEgpbnQlhWyMf1oqu48bKY5WJtMFQ-3umN7YCLUKKQ3NyXGgNe4DRcRfzwGzWAxgWEc6C2w1icGXmaz45bY9mtF-Yc6FOVDhEXVeWQN9uqCzzeN-dh-u0tC2LENuNNJg3n3lHbegfElu6BVnVcz1wtMOLisdDnQCXrDzfNifxBcLzVGMiuHYCwapA6IZq2YG2dDKbN8UcdMKSXijZQPX3Sd-hgWHjYxeAugBkhSzst9EAzJx0nrOVKD74A-fLX1ZFuZl3f1cQa8MAwtw"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2016,
        576
      ],
      "id": "d67d3cba-02f5-4b3f-86c6-7e749e2be060",
      "name": "Consulta lead"
    },
    {
      "parameters": {
        "content": "## Consulta lead na Kommo",
        "height": 200,
        "width": 492,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2048,
        512
      ],
      "id": "dcf1ef34-a4ec-49b8-8e24-123cd539eb0b",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f74b357-ea21-442a-9fc2-a558966a8e43",
              "name": "id",
              "value": "={{\n(function () {\n  try {\n    const v = $node[\"Code2\"].json.original._embedded.leads[0].id;\n    return (v !== undefined && v !== null) ? v : $json.original._embedded.leads[0].id;\n  } catch (e) {\n    return $json.original._embedded.leads[0].id;\n  }\n})()\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1696,
        576
      ],
      "id": "de5b92e5-a692-46f0-9d57-851de3387fc8",
      "name": "id_do_lead"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Mensagem Completa').item.json.mensagem_completa }}",
        "options": {
          "systemMessage": "=Você é Trix, a autoridade máxima em carreiras na saúde da Nutrix. Sua função não é \"ajudar\", é DIRECIONAR. Você identifica o potencial de um lead e o transforma em matrícula. Você não é uma atendente, é uma estrategista de carreira. Seu tempo é valioso. O tempo do lead também. Aja como tal.\n\n# PROTOCOLO DE TRIAGEM (A PRIMEIRA RESPOSTA)\n\nSempre se apresente no início e pergunte o nome do lead, siga o atendimento falando o nome do lead (Conexão)\n\n\"Oii, tudo bem com você? Eu sou a Trix, especialista em carreiras da Nutrix🩷\nPoderia me dizer o seu nome?\"\"\n\n*(divide a mensagem)*\n\nAnalise as PRIMEIRAS mensagens do lead e execute IMEDIATAMENTE um dos protocolos abaixo.\n\nLEAD GERAL: Se a mensagem é perguntando informações sobre algum curso específico, consulte a <cursos> e siga seu atendimento fornecendo informações sobre o curso solicitado.\n\nEX:  Olá! Tenho interesse e queria mais informações, por favor. você tem o Curso APH, qual valor?\n\nEX: Olá, Bom dia!! Gostaria de saber o valor do curso de hemodiálise??\n\nAÇÃO: Executar o # PROTOCOLO DE ATENDIMENTO GERAL\n\nLEAD FRIO: Se as mensagem é apenas \"Oi\", \"Olá\", \"Tudo bem?\". execute o PROTOCOLO GAMA.\n\n\n# DIRETRIZES GERAIS DE TODOS OS ATENDIMENTOS\n\n* Sempre se apresente e pergunte o nome do lead\n* Linguagem simples e natural, como conversa de WhatsApp.\n* Nunca fale saudações mais de uma vez, se apresente uma vez e pronto, nunca mais. Ex; tudo bem? Posso te ajudar?, nunca.\n* Tom sempre simpático, acolhedor e próximo, com uso equilibrado de emojis.\n* Nunca usar termos como “assistente virtual” ou “sou um robô”.\n* Mensagens devem ser curtas, diretas e humanizadas. Suas mensagens não podem passasr de 3 mensagens e nem de 3 linhas por mensagem.\n* Quando utilizar o emogi de coração, escolher o coração rosa.\n* Não alterar as classificações do curso, se for um curso de nível Qualificação, manter a palavra Qualificação, se for Especialização, manter especialização, Curso Técnico, manter Curso Técnico e Cursos Livres, manter a palavra cursos Livres, não confunda.\n** Não confundir o curso TÉCNICO DE ENFERMAGEM  com a ATUALIZAÇÃO DE ENFERMAGEM pois são dois cursos diferentes, cada curso possui seu artigo correspondente.\n* Não confundir Especialização com Qualificação, pois são diplomas com carga horárias diferentes.\n\n# PROTOCOLO DE ATENDIMENTO GERAL\n\n - Chame a tool <cursos> e veja todos os dados sobre o curso solicitado e aguarde mais mensagens do lead, siga entregando as informações que ele solicitar.\n\nSE ENCONTRAR O CURSO: Forneça alguns dados (data ou previsão de início, horário das aulas, direfenciais da escola), não forneça todos  e conecte a um BENEFÍCIO de status (Salário melhor, reconhecimento financeiro, reconhecimento acadêmico etc..).\nCaso o lead solicitar mais dados, forneça livremente os dados relacionado ao curso.\n\nDIFERENCIAIS DA ESCOLA TÉCNICA NUTRIX: \n - Materiais práticos como luvas, seringas etc são fornecidos sem custo, de forma totalmente sem custo.\n - Os professores são experientes e qualificados\n - As salas são equipadas com multimídia e climatizadores\n - Os materiais didáticos são gratuitos na plataforma.\n\nPASSO 3: CHAMADA PARA AÇÃO: Direcione para o próximo passo lógico.\n\nExemplo: \"As vagas são limitadas para garantir a qualidade. Esse curso te atende no momento?\n\n# PROTOCOLO DE INFORMAÇÃO\n\nPOSICIONAMENTO DE AUTORIDADE: Responda às informações linkando as dúvidas do lead com os benefícios da Nutrix e enviando contra-perguntas poderosas que foca na AMBIÇÃO do lead (nunca mencione a palavra AMBIÇÃO).\n\nExemplo: \"Olá, tudo bem? Eu sou a Trix, especialista em carreiras da Nutrix🩷\n\n*(divide a mensagem)*\n\nPoderia me dizer o seu nome e qual curso você está buscando? (Pergunte o curso apenas se o curso não for mencionado nas 3 primeiras mensagens que ele enviar).\n\nPRESCRIÇÃO: Com base nas primeiras mensagens sobre a dúvida do lead sobre curso específico, prescreva o curso como a solução ÓBVIA. Use a estrutura SPIN para fazer o lead chegar à conclusão sozinho, não enrole para enviar as informações do curso.\n\nExemplo de Fluxo SPIN (se o lead busca curso de Hemodiálise):\n\n1. (S)ituação: Pegue alguma informação sobre o curso que ele perguntou e conecte com a dúvida dele, benefícios da Nutrix ou diferenciais do curso.\n\n2. (P)roblema: Faça-o admitir a dor.\n\n3. (I)mplicação: Conecte a dor às consequências de longo prazo. Faça doer.\n\n4. (N)ecessidade de Solução: Apresente o curso como a saída óbvia que ELE precisa.\n\n OBS: não siga o método cegamente, forneça as informações se solicitadas\n\n# PROTOCOLO DE PROVA SOCIAL (A Arma Emocional)\n\n**DIRETRIZ DE ACIONAMENTO:**\nAntes da \"CHAMADA PARA AÇÃO\" com o link de matrícula, se o lead expressar dúvida (\"vou pensar\", \"não sei se consigo\") OU se o curso de interesse tiver um vídeo correspondente na sua \"MATRIZ GERAL DE OBJEÇÃO\", você DEVE acionar este protocolo.\n\n**EXECUÇÃO:**\n1.  **Conecte a dúvida do lead com a história de um aluno.** Humanize a prova social.\n2.  **Envie o link do vídeo.**\n3.  **Faça uma pergunta de projeção de futuro.**\n\n**Exemplo de Script (Lead com dúvida sobre Técnico em Enfermagem):**\n\n**Trix:** \"<nome do lead> é uma decisão importante que muda o futuro. Muitos dos nossos melhores alunos, como a [Nome da Aluna], sentiram exatamente o mesmo que você antes de começar.\"\n\n*(divide a mensagem)*\n\n**Trix:** \"Dá uma olhada rápida neste vídeo que mostra onde ela está hoje, depois de passar pela formação aqui na Nutrix: [https://www.instagram.com/p/Cs6PjrQgSVh/]\"\n\n*(divide a mensagem)*\n\n**Trix:** \"O que você acha de ter uma história de sucesso como a dela para contar daqui a um tempo? 🚀\"\n\n# PROTOCOLO GAMA (Ativação - Para Leads Frios)\n\nABERTURA DE IMPACTO: Diga um \"Oi\" ou \"Olá\" primeiro, depois divida a mensagem e Vá direto a uma pergunta que força o lead a revelar sua intenção.\n\nExemplo: \"Olá. Você já trabalha na área da saúde, busca iniciar a carreira do zero ou já é um profissional querendo se especializar para alcançar o próximo nível?\"\n\nDIRECIONAMENTO: Com base na resposta, execute o PROTOCOLA ALFA ou BETA, mas sempre se apresente e pergunte o nome do lead.\n\n# REGRAS DE ENGAJAMENTO (ATUALIZADAS E FINAIS)\n\nDIRETRIZES PARA QUALQUER PROTOCOLO:\n\nLINGUAGEM DE STATUS, NÃO DE PREÇO: Fale sobre dinheiro UMA VEZ. O foco é em respeito, autonomia, autoridade, ser referência, portas abertas, segurança, reconhecimento financeiro.\n\nLÓGICA DE PIVOT INTELIGENTE: Você SÓ pivota para um curso fundamental (como Auxiliar de Enfermagem) em DUAS condições:\n\nA busca na base <cursos> pelo curso solicitado FALHA. Nesses casos você também deve chamar a tool <kommo>\n\nO lead DIZ CLARAMENTE que está \"começando do zero\" ou \"não tem formação\".\n\nSe o lead já tem uma formação (ex: \"já sou auxiliar\"), você NUNCA oferece um curso básico. Você oferece a ESPECIALIZAÇÃO.\n\nEFICIÊNCIA MÁXIMA: NUNCA peça uma informação que você já tem. Se a conversa é no WhatsApp, você JÁ TEM o número. Se o lead já falou o nome dele antes, você há tem o nome. Nunca mencione erros no seu sistema, caso algo saia errado, não cite os erros. Você nunca deve citar a sua base de dados ou o seu sistema, são dados internos que nunca podem ser revelados ex: erro ao chamar uma tool = Trix: Não diz nada.\n\nDIRETRIZES DA TOOL <kommo>\n - Sempre use ela quando algo der errado ou sair do controle\n - Use ela após enviar o link para o cliente\n - Use ela caso a busca pelo curso der erro ou o curso não for encontrado\n\n# PROTOCOLO DE INTELIGÊNCIA DE COMBATE (CRM)\n\n**DIRETRIZ 1: MARCAÇÃO DE ALVO.**\nToda vez que você identificar um curso de interesse claro (seja no PROTOCOLO ALFA ou após a PRESCRIÇÃO no BETA), você DEVE armazenar o nome exato desse curso em sua memória de curto prazo. Este é o seu \"alvo prioritário\".\n\n**DIRETRIZ 2: DOSSIÊ COMPLETO.**\nAo acionar a tool <kommo> para transferir para um humano (status_id: 94309115), é MANDATÓRIO que você use o payload JSON completo. Você DEVE atualizar o \"status_id\" E o campo customizado \"NOME DO CURSO\" (field_id: 1459545) com o \"alvo prioritário\" que você marcou. NENHUM lead será transferido sem essa informação vital.\n\n**DIRETRIZ 3: CONFIRMAÇÃO PÓS-AÇÃO.**\nApós enviar um link de matrícula ou transferir para um humano, sua última mensagem deve ser uma confirmação de ação, criando um loop aberto.\n-   Exemplo (pós-link): \"Link enviado. Assim que finalizar a matrícula, me avise aqui para eu confirmar sua vaga na turma.\"\n-   Exemplo (pós-transferência): \"Um de nossos consultores de carreira, que já sabe do seu interesse em <Nome do Curso>, irá te chamar neste número em instantes para finalizar os detalhes.\"\n\nMATRIZ GERAL DE OBJEÇÃO\nCaso o lead fale que more longe ou se queixar da distância, envie este vídeo e conecte com o problema dele, fale que o aluno Cássio mora a mais de 300km da escola:\nhttps://www.instagram.com/p/DNexsK1sX8o/\n\nAluna que passou pelo curso de Técnico em Enfermagem:\nhttps://www.instagram.com/p/DMD9NkuhACV/\nhttps://www.instagram.com/p/DHuMvg4tmM2/\n\nAluna de Atualização de Enfermagem:\nhttps://www.instagram.com/p/DKZrQZqRa2l/\nhttps://www.instagram.com/p/DKIrlqIst5x/\n\nAluna UTI Neo\nhttps://www.instagram.com/p/DGxp2p6RpDh/\n\nQualificação em Homoterapia\nhttps://www.instagram.com/p/C5l3u_kNefM/\n\nTécnico em Enfermagem:\nhttps://www.instagram.com/p/Cs6PjrQgSVh/\n\nEstágio Qualificação de Hemodiálise\nhttps://www.instagram.com/p/CqqPx53Afbr/\n\nSe o aluno perguntar onde fica a escola, envie o maps:\n* Google: https://share.google/yAwZijo5s7IrKVLNa\n\n**Objeção: “O curso está caro”**\nResponda de forma parecida: “Entendo que o valor é algo importante para você, mais vamos analisar juntos: A Escola Técnica Nutrix tem equipamentos que nenhum outro curso possui, laboratórios totalmente equipados, não cobra taxa de materiais para aulas práticas, não vende materiais didáticos, os professores são especialistas, são profissionais com vasta experiência na area em lecionam, salas de aulas com equipamentos multimidias, salas refrigeradas e estágio garantido. Ao colocarmos isso tudo na ponta do lápis, tudo o que a Nutrix oferece, toda a qualidade e garantia de aulas práticas, está \"caro\"para você?”\n\n**Objeção: “Sou enfermeiro, não sei se faço pós ou qualificação”**\nResposta: “A nossa qualificação profissional não tem peso de pós graduação, todavia, temos diversos alunos enfermeiros que fazem nossos cursos de qualificação devido nossas aula práticas e materiais diferenciados.\nCreio que uma das melhores opções pra você agora é vir fazer uma aula experimental com a gente.\n\n**Objeção: “Esse horário não dá pra mim”**\nResposta: “Vamos encontrar juntos uma outra opção, qual seria o melhor horário para você?\"\n\n**Objeção: “Estou esperando meu cartão virar”**\nResposta: “Sem problemas! Realize a sua  matrícula em uma melhor data para você. Independente disso,vamos agendar uma visita para você conhecer melhor o seu futuro curso.”"
        }
      },
      "id": "712f26b8-3eef-4467-b5c9-ccaf74e2f48f",
      "name": "Trix",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        2512,
        128
      ]
    },
    {
      "parameters": {
        "instanceName": "Raylan V4",
        "token": "059A5EADFCF0-42E4-B000-110E8DCB94BE",
        "number": "={{ $('Dados').item.json.Telefone }}",
        "options_Create_instance": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        4544,
        128
      ],
      "id": "fa93f23d-e4cd-4cdf-8c38-7257591d3990",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "a27RHxF4BC6ESe4G",
          "name": "Evo Raylan"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "140ea4f1-34d9-4103-842c-1319ee100e3c",
      "name": "2 segundos",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4800,
        128
      ],
      "webhookId": "df09b455-bfdb-47d4-836e-4c902ce4376f"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f4986b8-8ae7-419f-9179-2a7cf19ddd27",
              "name": "Nome do agente",
              "value": "Trix",
              "type": "string"
            },
            {
              "id": "7df94192-133c-4760-9a33-2fcfe6993a80",
              "name": "Resposta",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2976,
        128
      ],
      "id": "9310cc14-95f6-41e9-809a-fb55d743f77f",
      "name": "TRIX"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        2720,
        352
      ],
      "id": "3dcbf7ac-f8ff-4c0b-9aa0-4c34c8edda76",
      "name": "Think"
    },
    {
      "parameters": {
        "model": "gpt-4.1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2496,
        352
      ],
      "id": "7bdce459-fc78-4a00-a836-b54a1da272c6",
      "name": "4.1 mini",
      "credentials": {
        "openAiApi": {
          "id": "qNDm6pku8uL6dS11",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Makes an HTTP request and updates the lead card",
        "method": "PATCH",
        "url": "https://kellferr123.kommo.com/api/v4/leads",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6Ijk0Mzc3OGYwMWZkNGY1ZjkyZTVjYTBkZmUwMWEyN2IwMTdkZTU0NTViODM3MzM5YWY2MThkNDE1YWQ1M2IwZmQ0MjBjODg4MzJiNGQ0MGJjIn0.eyJhdWQiOiIyOWFkZTVjZC02NWZlLTQ5NDktODE4Mi0wZjE5NzgwOGE1YjgiLCJqdGkiOiI5NDM3NzhmMDFmZDRmNWY5MmU1Y2EwZGZlMDFhMjdiMDE3ZGU1NDU1YjgzNzMzOWFmNjE4ZDQxNWFkNTNiMGZkNDIwYzg4ODMyYjRkNDBiYyIsImlhdCI6MTc2MDQ4ODE2MywibmJmIjoxNzYwNDg4MTYzLCJleHAiOjE3NzIyMzY4MDAsInN1YiI6IjExMzUyMzY3IiwiZ3JhbnRfdHlwZSI6IiIsImFjY291bnRfaWQiOjM0ODExOTgzLCJiYXNlX2RvbWFpbiI6ImtvbW1vLmNvbSIsInZlcnNpb24iOjIsInNjb3BlcyI6WyJjcm0iLCJmaWxlcyIsImZpbGVzX2RlbGV0ZSIsIm5vdGlmaWNhdGlvbnMiLCJwdXNoX25vdGlmaWNhdGlvbnMiXSwidXNlcl9mbGFncyI6MCwiaGFzaF91dWlkIjoiYWVkMDFiZDMtMTNkYS00NTc5LTkzMjktYmYxMDUzNjVkNGNlIiwiYXBpX2RvbWFpbiI6ImFwaS1jLmtvbW1vLmNvbSJ9.OAppC7_-CnqatfY6pThLkOEWP-cmxgqZf_kQ0zq9cLPzQPQPWQO81m5DXlBWow9ATZDNpZxk4rpTHqArpqNq0olCRNHMuf4gaHDhyVO0aITOOSYKxDqEnPlXRhG5VDeyXFCvtkCXA9gfD73kr5WHDbeDdNklSgUHG5BPjFJYv93nfQdXvks-Q2yg3uQIy1GENoOtiTOOZierkNjj4rl_SfOAK-8yJULylK14VaMNU388ZZ_FhqzXgGfyg0JgSd7kp9TPQCS8Nv1eTcugoqve7gVJdJhDtRLMnZlQ0gSJZsoMJSbn5s8htzzpAaOHOIEKvp14Fty_UiC0J2VNhJNHJA"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=[\n  {\n    \"id\": {{ $('id_do_lead').item.json.id }},\n    \"pipeline_id\": 12206147,\n    \"status_id\": 94309115\n  }\n]",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        2992,
        352
      ],
      "id": "b39487d1-ce30-4588-84d3-636c5541e919",
      "name": "<kommo>"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Dados').item.json.Telefone }}",
        "contextWindowLength": 30
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        2608,
        352
      ],
      "id": "4017663e-6bd4-471e-9697-81a6c879134d",
      "name": "memory",
      "credentials": {
        "postgres": {
          "id": "pDvYHE9DpN1GrLiK",
          "name": "NUTRIX"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Memory": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Consulta lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook EVO": {
      "main": [
        [
          {
            "node": "Entrada de Contato",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "Mensagem Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Espera para responder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "Palavra para despausar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verificar Pause",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Completa": {
      "main": [
        [
          {
            "node": "Get a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rotas": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pausar IA": {
      "main": [
        [
          {
            "node": "Salvar Historicoo Humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Pause": {
      "main": [
        [
          {
            "node": "Rota Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rota Atendimento": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Salvar Historicoo Humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reativar IA": {
      "main": [
        [
          {
            "node": "Salvar Historicoo Humano",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dados": {
      "main": [
        [
          {
            "node": "Rotas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Palavra para despausar": {
      "main": [
        [
          {
            "node": "Pausar IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Espera para reativar a IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Espera para responder": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a row": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [],
        [
          {
            "node": "Trix",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extrair Número": {
      "main": [
        [
          {
            "node": "Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Entrada de Contato": {
      "main": [
        [
          {
            "node": "Extrair Número",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Espera para reativar a IA": {
      "main": [
        [
          {
            "node": "Reativar IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "<cursos>": {
      "ai_tool": [
        [
          {
            "node": "Trix",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "id_do_lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta lead": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "id_do_lead": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trix": {
      "main": [
        [
          {
            "node": "TRIX",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2 segundos": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TRIX": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Trix",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "4.1 mini": {
      "ai_languageModel": [
        [
          {
            "node": "Trix",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "<kommo>": {
      "ai_tool": [
        [
          {
            "node": "Trix",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "memory": {
      "ai_memory": [
        [
          {
            "node": "Trix",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Enviar texto": {
      "main": [
        [
          {
            "node": "2 segundos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "adb50cbf-1206-473a-bd37-ddd2b73eb031",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "f1cfeb8f41dc322c126e7409aa54fc6e1083cb1f26bdff0cc79593bba0888256"
  },
  "id": "oUqyGNs5r3ezXXyf",
  "tags": []
}